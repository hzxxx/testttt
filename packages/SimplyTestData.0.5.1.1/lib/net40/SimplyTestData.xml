<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimplyTestData</name>
    </assembly>
    <members>
        <member name="T:SimplyTestData.ICustomizationsContainer">
            <summary>
            Stores customization actions for multiple types.
            </summary>
        </member>
        <member name="M:SimplyTestData.ICustomizationsContainer.AddForType``1(System.Action{``0}[])">
            <summary>
            Adds list of customization actions for type <typeparam name="T">T</typeparam>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="customizations">
            Customization actions for type <typeparam name="T">T</typeparam>.
            </param>
        </member>
        <member name="M:SimplyTestData.ICustomizationsContainer.ClearAll">
            <summary>
            Clears all stored customization actions for all types.
            </summary>
        </member>
        <member name="M:SimplyTestData.ICustomizationsContainer.ClearForType``1">
            <summary>
            Clears all customization actions for type <typeparam name="T">T</typeparam>.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SimplyTestData.ICustomizationsContainer.GetApplicableToType``1">
            <summary>
            Gets all customization actions applicable to type <typeparam name="T">T</typeparam>.
            </summary>
            <typeparam name="T"></typeparam>
            <returns>All customization actions applicable to type <typeparam name="T">T</typeparam>.</returns>
            <remarks>
            The returned customizations are not necessarily the only ones previously added
            but can contain reduced or excessive set of customizations.
            This is totally up to interface implementors.
            </remarks>
        </member>
        <member name="P:SimplyTestData.StandardCustomizationsContainer.AllowDuplicates">
            <summary>
            Allows duplicate customizations to be added for types.
            </summary>
            <remarks>
            Please note that customizations might have side effects so in this case
            duplicate customizations might lead to ... [TBD].
            However it can be desired behavior.
            </remarks>
        </member>
        <member name="P:SimplyTestData.StandardCustomizationsContainer.ScopeApplicableCustomizationsToRequestedTypeOnly">
            <summary>
            Limits customizations to be considered as applicable to the specified type itself.
            </summary>
            <remarks>
            In other words, customizations defined for base/inherited types
            as well as for implemented interfaces will be not included
            into results of GetApplicableToType&lt;T&gt;() call.
            </remarks>
        </member>
        <member name="M:SimplyTestData.TestData.ClearAllPermanentCustomizations">
            <summary>
            Clears all previously stored permanent customizations for objects of all types.
            </summary>
        </member>
        <member name="M:SimplyTestData.TestData.ClearPermanentCustomizations``1">
            <summary>
            Clears all permanent customizations for objects of type <typeparam name="T">T</typeparam>.
            </summary>
            <typeparam name="T"></typeparam>
            <remarks>Permament customizations for derived types remain intact.</remarks>
        </member>
        <member name="M:SimplyTestData.TestData.Create``1(System.Action{``0}[])">
            <summary>
            Creates object of specified type <typeparam name="T">T</typeparam>
            with all the type-applicable permanent customizations applied
            as well as passed ad-hoc ones.
            </summary>
            <typeparam name="T">Type of object to be created.</typeparam>
            <param name="customizations">Ad-hoc customizations to be applied to resulting object.</param>
            <returns>
            Object of type <typeparam name="T">T</typeparam>
            with all type-applicable permanent customizations applied
            as well as passed ad-hoc ones.
            </returns>
        </member>
        <member name="M:SimplyTestData.TestData.CreateListOf``1(System.UInt16)">
            <summary>
            Creates list of objects of specified type <typeparam name="T">T</typeparam>
            with all the type-applicable permanent customizations applied
            as well as passed ad-hoc ones.
            </summary>
            <typeparam name="T">Type of object to be created.</typeparam>
            <param name="size">List capacity (i.e. number of objects in list)</param>
            <returns>
            List of objects of specified type <typeparam name="T">T</typeparam>
            with all the type-applicable permanent customizations applied
            as well as passed ad-hoc ones.
            </returns>
        </member>
        <member name="M:SimplyTestData.TestData.SetPermanentCustomizations``1(System.Action{``0}[])">
            <summary>
            Stores customizations permanently and then applies them
            to every created object of type <typeparam name="T">T</typeparam> or of derived type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="customizations"></param>
        </member>
        <member name="M:SimplyTestData.TestDataSession.Create``1(System.Action{``0}[])">
            <summary>
            Creates object of specified type <typeparam name="T">T</typeparam>
            with all the type-applicable customizations applied
            as well as passed ad-hoc ones.
            </summary>
            <typeparam name="T">Type of object to be created.</typeparam>
            <param name="customizations">Ad-hoc customizations to be applied to resulting object.</param>
            <returns>
            Customized object of type <typeparam name="T">T</typeparam>.
            </returns>
        </member>
        <member name="M:SimplyTestData.TestDataSession.CreateListOf``1(System.UInt16)">
            <summary>
            Creates list of objects of specified type <typeparam name="T">T</typeparam>
            with all the type-applicable customizations applied
            as well as passed ad-hoc ones.
            </summary>
            <typeparam name="T">Type of object to be created.</typeparam>
            <param name="size">List capacity (i.e. number of objects in list)</param>
            <returns>
            List of customized objects of specified type <typeparam name="T">T</typeparam>.
            </returns>
        </member>
    </members>
</doc>
